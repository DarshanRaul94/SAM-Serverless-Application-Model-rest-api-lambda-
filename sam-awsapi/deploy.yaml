AWSTemplateFormatVersion: '2010-09-09'
Description: 'sam-awsapi

  Sample SAM Template for sam-awsapi

  '
Globals:
  Function:
    Timeout: 60
Outputs:
  MyLambdaLayerARN:
    Description: MyLambdaLayer ARN
    Export:
      Name: my-lambda-layer-arn
    Value:
      Ref: MyLambdaLayer
Resources:
  CreateBucketFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/59e5c7410e351073d9a5f2cc2aba6298
      Description: Create bucket
      FunctionName: createbucketsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateGroupFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/49e3691f81be32e7f862ca0826c2316e
      Description: Create group
      FunctionName: creategroupsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/9b5312ce71870cd7aabce28970b38b3d
      Description: Create servers with specified configuration
      FunctionName: createserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateUserFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/38a580b5c25bd1f6ea73024dc8affacb
      Description: Create user
      FunctionName: createusersam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteBucketFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/cba356691d3f5b55f8de8e5280f879ae
      Description: Delete bucket
      FunctionName: deletebucketsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteGroupFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/6d349b6eb4159248d7610ab8f4de1a25
      Description: Delete User
      FunctionName: deletegroupsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteUserFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/5a2b56cb222e24e853ec5aec975037a7
      Description: Delete User
      FunctionName: deleteusersam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetBucketsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/15a2e614babe96b7be23a9b6d444a1e7
      Description: Get the buckets in your account
      FunctionName: getbucketssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetGroupDetailsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/1ddb36d68e5fcfbb97e70279a7ef89e4
      Description: Get details of users in a group
      FunctionName: groupdetailssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetGroupsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/81ca859f4ca2c4796d6a375f18cf53db
      Description: get all Groups in your AWS account
      FunctionName: getallGroupsssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetKeypairsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/06b08db1a7b2b94c82fb36cc81bdbf10
      Description: Get Keypairs in your account
      FunctionName: getkeypairssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetObjectsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/7a3b08b6254bfe0e674a8ce87aa245f4
      Description: get buckets of a specific bucket
      FunctionName: getobjectssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetRolesFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/1c017b1a3738aa78c180b237ce97cd65
      Description: Get roles in your account
      FunctionName: getrolessam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetServersFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/242d7ac236b3bd81feffab84058fab83
      Description: Get the instances in your account
      FunctionName: getserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetUsersFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/1e4618e3894e5df0df65a59d1c547bed
      Description: get all users in your AWS account
      FunctionName: getallusersssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetallObjectsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/7ca0a3a76e0bd1e509df7353a8f42fbb
      Description: Get all buckets in all buckets
      FunctionName: getallobjectssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  MyLambdaLayer:
    Properties:
      CompatibleRuntimes:
      - python3.6
      - python3.7
      ContentUri: s3://sam-templates-awsapi-2/496627a3d9a1c39de1796a699affcb6f
      Description: My Lambda Layer with FireAuth Function
      LayerName: MyLambdaLayer
      LicenseInfo: MIT
      RetentionPolicy: Retain
    Type: AWS::Serverless::LayerVersion
  StartStopServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/570d0e72cba3466d75ea71a60d47940a
      Description: Start or Stop servers by providing isntance_ids
      FunctionName: startstopserversam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  TerminateServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-2/0a0d1ecc651fdf2d81e393ea6b975a08
      Description: Terminate server by providing instance_id
      FunctionName: terminateserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
