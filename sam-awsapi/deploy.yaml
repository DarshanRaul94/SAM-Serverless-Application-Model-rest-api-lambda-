AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-awsapi

  Sample SAM Template for sam-awsapi

  '
Globals:
  Function:
    Timeout: 60
Resources:
  GetBucketsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getbucketssam
      Description: Get the buckets in your account
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/299af625408dc8b712d1303761d7c7a0
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetServersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getserverssam
      Description: Get the instances in your account
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/bc4e6100a063990f78c491b4d70d9750
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  CreateBucketFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createbucketsam
      Description: Create bucket
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/d6f554a121acf7ea763cd07f8d6e1700
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  DeleteBucketFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deletebucketsam
      Description: Delete bucket
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/00a80cf41d5b1e52b1acce8e660dc36e
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetallObjectsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getallobjectssam
      Description: Get all buckets in all buckets
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/612559b7271f37789bb0039dc35bdbe4
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetObjectsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getobjectssam
      Description: get buckets of a specific bucket
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/df348c393e5d9153ecd3b2b8b4000d05
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getallusersssam
      Description: get all users in your AWS account
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/2a2e090b58504bd7097d099058d68601
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createusersam
      Description: Create user
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/163ef0c91068ca9d6cc6802ee0bf98e0
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteusersam
      Description: Delete User
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/2f29a4c93eb28bce683d1d07f1e7e6ea
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetGroupsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getallGroupsssam
      Description: get all Groups in your AWS account
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/e441dc5feebfd86936dda1705d65f27c
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  CreateGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: creategroupsam
      Description: Create group
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/ad7ed75a5725012d3227dd82092d3d2f
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  DeleteGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deletegroupsam
      Description: Delete User
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/2a1096b6ffc619799d8798ce47e79ac6
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  GetGroupDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: groupdetailssam
      Description: Get details of users in a group
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      CodeUri: s3://sam-templates-awsapi-2/a36791171fd5d27469e6b9326b9335b6
      Handler: main.lambda_handler
      Runtime: python3.6
      Layers:
      - Ref: MyLambdaLayer
  MyLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: MyLambdaLayer
      Description: My Lambda Layer with FireAuth Function
      ContentUri: s3://sam-templates-awsapi-2/496627a3d9a1c39de1796a699affcb6f
      CompatibleRuntimes:
      - python3.6
      - python3.7
      LicenseInfo: MIT
      RetentionPolicy: Retain
Outputs:
  MyLambdaLayerARN:
    Value:
      Ref: MyLambdaLayer
    Description: MyLambdaLayer ARN
    Export:
      Name: my-lambda-layer-arn
