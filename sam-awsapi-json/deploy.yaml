AWSTemplateFormatVersion: '2010-09-09'
Description: 'sam-awsapi

  Sample SAM Template for sam-awsapi

  '
Globals:
  Function:
    Timeout: 60
Outputs:
  MyLambdaLayerARN:
    Description: MyLambdaLayer ARN
    Export:
      Name: my-lambda-layer-arn
    Value:
      Ref: MyLambdaLayer
Resources:
  CreateBucketFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/b2daa217ea3de56e2f0c0a06f2415d5b
      Description: Create bucket
      FunctionName: createbucketsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateGroupFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/e33da404595f0ad61116e173c0a1daab
      Description: Create group
      FunctionName: creategroupsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/4d040dab31204c1979ab58e29ca52da2
      Description: Create servers with specified configuration
      FunctionName: createserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateStackFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/6b9136e74cc369bd397b83ee31ad11c9
      Description: Get stack in your account
      FunctionName: createstacksam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateUserFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/8bf5f02b5961e54cd268c4cd8bddfeb5
      Description: Create user
      FunctionName: createusersam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteBucketFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/2017e35c282b1dc3da04314e9db50b38
      Description: Delete bucket
      FunctionName: deletebucketsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteGroupFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/6c730f4f11cb4eed5492958241809427
      Description: Delete User
      FunctionName: deletegroupsam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteUserFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/cf1733ffcadd61ba15c9d64996ef9efb
      Description: Delete User
      FunctionName: deleteusersam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetBucketsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/335c316737383f9e490f0dd6f6c133cc
      Description: Get the buckets in your account
      FunctionName: getbucketssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetGroupDetailsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/757e8dbd6e31fd54d7075cfbdd2110c8
      Description: Get details of users in a group
      FunctionName: groupdetailssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetGroupsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/2edbbfd4e92a88d9fb62acf24710aa0a
      Description: get all Groups in your AWS account
      FunctionName: getallGroupsssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetKeypairsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/e4c02c57419435498f6a53e6b96bdc7f
      Description: Get Keypairs in your account
      FunctionName: getkeypairssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetObjectsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/b1f4b6b121b014cb2414814009c55cd6
      Description: get buckets of a specific bucket
      FunctionName: getobjectssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetRolesFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/732132f3f7cb034bcddebabe40263aec
      Description: Get roles in your account
      FunctionName: getrolessam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetServersFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/80d217cfe33531e8fc11c395fe61d1c9
      Description: Get the instances in your account
      FunctionName: getserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetUsersFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/65cf98d0a255fe53b65d5c223aac592b
      Description: get all users in your AWS account
      FunctionName: getallusersssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetallObjectsFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/8a29beca68c407593ea940c219988b66
      Description: Get all buckets in all buckets
      FunctionName: getallobjectssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  MyLambdaLayer:
    Properties:
      CompatibleRuntimes:
      - python3.6
      - python3.7
      ContentUri: s3://sam-templates-awsapi-3/e4d4ba05a04162541549acd1c388b173
      Description: My Lambda Layer with FireAuth Function
      LayerName: MyLambdaLayer
      LicenseInfo: MIT
      RetentionPolicy: Retain
    Type: AWS::Serverless::LayerVersion
  StartStopServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/9dfdcf3181648eacee1ddb2328c02c1c
      Description: Start or Stop servers by providing isntance_ids
      FunctionName: startstopserversam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
  TerminateServerFunction:
    Properties:
      CodeUri: s3://sam-templates-awsapi-3/ad612587e646593f94918d6470188dc3
      Description: Terminate server by providing instance_id
      FunctionName: terminateserverssam
      Handler: main.lambda_handler
      Layers:
      - Ref: MyLambdaLayer
      Role: arn:aws:iam::310094733482:role/lambda_basic_execution
      Runtime: python3.6
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
